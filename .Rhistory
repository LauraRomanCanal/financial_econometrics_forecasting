risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
# 1000 DIMENSIONS
n = 400
d = 1000
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
rm(list=ls())
library(class)
library(plyr)
library(ggplot2)
####################
# PROBLEM 8
####################
rv.gen <- function(d){
X <- runif(d,0,1)
Y <- rbinom(n = 1,size = 1,prob = X[1])
return(c(X,Y))
}
sapply(1:n, function(x){rv.gen(d)})
training.data.gen <- function(n,d) {
# Create training data
data <- t( sapply(1:n, function(x){rv.gen(d)}) )
colnames(data) <- c(seq(1,d),'Y')
return(data)
}
kNN.classify.X <- function(n,d,t,k) {
data <- training.data.gen(n+t, d)
train.X <- as.matrix(data[1:n , 1:d] )
train.Y <- as.matrix(data[1:n , d+1])
test.X <- as.matrix(data[(n+1):(n+t), 1:d])
test.Y <- as.matrix(data[(n+1):(n+t), d+1])
KNN.pred <- knn(train = train.X,
cl = train.Y,
test = test.X,
k=k)
KNN.pred <- as.numeric(KNN.pred)
KNN.pred[KNN.pred==1] = 0
KNN.pred[KNN.pred==2] = 1
return( sum (abs ( KNN.pred - test.Y)) / t)
}
risk.estimation <- function(n,d,t,k, N){
risks <- do.call(rbind, rlply(N, kNN.classify.X(n,d,t,k)) )
return(mean(risks))
}
#########################
# Risk Estimation
#########################
# 1 DIMENSION
n = 400
d=1
k = 50
risks <-c ( risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
risks <- cbind(c(1,3,5,7,9), rep(1,5), risks)
colnames(risks) <- c('k','d','empirical_risk')
# 3 DIMENSIONS
n = 400
d = 3
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
# 50 DIMENSIONS
n = 400
d = 50
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
# 100 DIMENSIONS
n = 400
d = 100
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
# 500 DIMENSIONS
n = 400
d = 500
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
risks <- as.data.frame(risks)
ggplot()+
ggtitle('n=1000') +
geom_line(data = risks[risks$d==1,], aes(x=k,y=empirical_risk,color='d=1')) +
geom_line(data = risks[risks$d==3,], aes(x=k,y=empirical_risk,color='d=3')) +
geom_line(data = risks[risks$d==50,], aes(x=k,y=empirical_risk,color='d=50')) +
geom_line(data = risks[risks$d==100,], aes(x=k,y=empirical_risk,color='d=100')) +
geom_line(data = risks[risks$d==500,], aes(x=k,y=empirical_risk,color='d=1000'))
ggplot()+
ggtitle('n=1000') +
geom_line(data = risks[risks$d==1,], aes(x=k,y=empirical_risk,color='d=1')) +
geom_line(data = risks[risks$d==3,], aes(x=k,y=empirical_risk,color='d=3')) +
geom_line(data = risks[risks$d==50,], aes(x=k,y=empirical_risk,color='d=50')) +
geom_line(data = risks[risks$d==100,], aes(x=k,y=empirical_risk,color='d=100')) +
geom_line(data = risks[risks$d==500,], aes(x=k,y=empirical_risk,color='d=500'))
rm(list=ls())
library(class)
library(plyr)
library(ggplot2)
####################
# PROBLEM 8
####################
rv.gen <- function(d){
X <- runif(d,0,1)
Y <- rbinom(n = 1,size = 1,prob = X[1])
return(c(X,Y))
}
sapply(1:n, function(x){rv.gen(d)})
training.data.gen <- function(n,d) {
# Create training data
data <- t( sapply(1:n, function(x){rv.gen(d)}) )
colnames(data) <- c(seq(1,d),'Y')
return(data)
}
kNN.classify.X <- function(n,d,t,k) {
data <- training.data.gen(n+t, d)
train.X <- as.matrix(data[1:n , 1:d] )
train.Y <- as.matrix(data[1:n , d+1])
test.X <- as.matrix(data[(n+1):(n+t), 1:d])
test.Y <- as.matrix(data[(n+1):(n+t), d+1])
KNN.pred <- knn(train = train.X,
cl = train.Y,
test = test.X,
k=k)
KNN.pred <- as.numeric(KNN.pred)
KNN.pred[KNN.pred==1] = 0
KNN.pred[KNN.pred==2] = 1
return( sum (abs ( KNN.pred - test.Y)) / t)
}
risk.estimation <- function(n,d,t,k, N){
risks <- do.call(rbind, rlply(N, kNN.classify.X(n,d,t,k)) )
return(mean(risks))
}
#########################
# Risk Estimation
#########################
# 1 DIMENSION
n = 400
d=1
k = 100
risks <-c ( risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
risks <- cbind(c(1,3,5,7,9), rep(1,5), risks)
colnames(risks) <- c('k','d','empirical_risk')
# 3 DIMENSIONS
n = 400
d = 3
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
# 50 DIMENSIONS
n = 400
d = 50
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
# 100 DIMENSIONS
n = 400
d = 100
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1, k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
# 500 DIMENSIONS
n = 400
d = 500
risks <- rbind (risks,
cbind( c(1,3,5,7,9), rep(d,5),
c(risk.estimation(n,d,50,1,k),
risk.estimation(n,d,50,3, k),
risk.estimation(n,d,50,5, k),
risk.estimation(n,d,50,7, k),
risk.estimation(n,d,50,9, k)
)
)
)
risks <- as.data.frame(risks)
ggplot()+
ggtitle('n=1000') +
geom_line(data = risks[risks$d==1,], aes(x=k,y=empirical_risk,color='d=1')) +
geom_line(data = risks[risks$d==3,], aes(x=k,y=empirical_risk,color='d=3')) +
geom_line(data = risks[risks$d==50,], aes(x=k,y=empirical_risk,color='d=50')) +
geom_line(data = risks[risks$d==100,], aes(x=k,y=empirical_risk,color='d=100')) +
geom_line(data = risks[risks$d==500,], aes(x=k,y=empirical_risk,color='d=500'))
ggplot()+
ggtitle('Empirical Risk Estimation, n=400') +
geom_line(data = risks[risks$d==1,], aes(x=k,y=empirical_risk,color='d=1')) +
geom_line(data = risks[risks$d==3,], aes(x=k,y=empirical_risk,color='d=3')) +
geom_line(data = risks[risks$d==50,], aes(x=k,y=empirical_risk,color='d=50')) +
geom_line(data = risks[risks$d==100,], aes(x=k,y=empirical_risk,color='d=100')) +
geom_line(data = risks[risks$d==500,], aes(x=k,y=empirical_risk,color='d=500'))
Times <- cbind(
c(5,KM0.5),
c(10,KM5.10),
c(15,KM10.15),
c(20,KM15.20)
)
rm(list=ls())
KM0.5 <- 27+45/60
KM5.10 <- 26 + 23/60
KM10.15 <- 26.1
KM15.20 <- 27 + 1/60
Times <- cbind(
c(5,KM0.5),
c(10,KM5.10),
c(15,KM10.15),
c(20,KM15.20)
)
rm(list=ls())
setwd('~/documents/financial-econ/forecasting/')
data <- read.csv('forecast-competition-training.csv',header=FALSE)
data
data <- read.csv('forecast-competition-training.csv',header=T)
head(data)
dim(data)
target <- data$TARGET
library(tseries)
setwd('~/documents/financial-econ/forecasting/')
library(tseries)
library(moments)
library(dplyr)
library(magrittr)
target <- data$TARGET
lag(data,n=1)
head(lag(data,n=1))
target
head(lag(data,n=1))
head(lag(data$t,n=1))
lag(data$target)
lag(target)
lag(target,n=1)
rm(list=ls())
save.plots = FALSE
setwd('~/documents/financial-econ/forecasting/')
library(tseries)
library(moments)
library(dplyr)
data <- read.csv('forecast-competition-training.csv',header=T)
target <- data$TARGET
par( mar=c(2,2,0.1,0.1) )
target.acf <- acf(target , lag.max = 10, ylim=c(-0.2,1) , lwd=5 , xlim=c(0,10) , col='darkorange2')
dev.off()
target.acf
arma11 <- arima(target, order = c(1,0,1))
predict(arma11)
target
rm(list=ls())
rm(list=ls())
save.plots = FALSE
setwd('~/documents/financial-econ/forecasting/')
library(tseries)
library(moments)
library(dplyr)
data <- read.csv('forecast-competition-training.csv',header=T)
target <- data$TARGET
par( mar=c(2,2,0.1,0.1) )
target.acf <- acf(target , lag.max = 10, ylim=c(-0.2,1) , lwd=5 , xlim=c(0,10) , col='darkorange2')
dev.off()
arma11 <- arima(target, order = c(1,0,1))
predict(arma11)
library(randomForest)
library(randomforest)
library(class)
install.packages('randomForest')
library(randomForest)
target.lag1 <- lag(target,1)
target.lag1 <- lag(target,1)
target.lag2 <- lag(target,2)
target.lag3 <- lag(target,3)
rm(list=ls())
save.plots = FALSE
setwd('~/documents/financial-econ/forecasting/')
library(tseries)
library(moments)
library(dplyr)
library(randomForest)
data <- read.csv('forecast-competition-training.csv',header=T)
target <- data$TARGET
par( mar=c(2,2,0.1,0.1) )
target.acf <- acf(target , lag.max = 10, ylim=c(-0.2,1) , lwd=5 , xlim=c(0,10) , col='darkorange2')
dev.off()
arma11 <- arima(target, order = c(1,0,1))
predict(arma11)
data.lag1 <- lag(data,1)
data.lag2 <- lag(data,2)
data.lag3 <- lag(data,3)
data.lag5 <- lag(data,5)
data.lag1 <- lag(data,1)
data.lag2 <- lag(data,2)
data.lag3 <- lag(data,3)
data.lag4 <- lag(data,4)
data.lag5 <- lag(data,5)
features <- cbind(
data,
data.lag1,
data.lag2,
data.lag3,
data.lag4,
data.lag5
)
dim(features)
features <- cbind(
data,
data.lag1,
data.lag2,
data.lag3
)
dim(features)
data.lag1
head(data.lag1)
data.lag2
library(stats)
data.lag1 <- lag(data,1)
head(data.lag1)
data.lag1 <- lag(t(data),1)
head(data.lag1)
data.lag1 <- lag(data,1)
data.lag2 <- lag(data,2)
data.lag3 <- lag(data,3)
data.lag4 <- lag(data,4)
data.lag5 <- lag(data,5)
head(data.lag5)
data.lag1 <- t ( lag(t(data) ,1)
)
data.lag1
head(data.lag1)
is.data.frame(data)
data <- as.matrix(read.csv('forecast-competition-training.csv',header=T))
target <- data$TARGET
data <- read.csv('forecast-competition-training.csv',header=T)
target <- data$TARGET
arma11 <- arima(target, order = c(1,0,1))
predict(arma11)
data.lag1 <- lag(data,1)
data.lag1 <- lag(data,1)
data.lag2 <- lag(data,2)
data.lag3 <- lag(data,3)
data.lag4 <- lag(data,4)
data.lag5 <- lag(data,5)
features <- cbind(
target,
data.lag1,
data.lag2,
data.lag3
)
features <- cbind(
target,
data.lag1,
data.lag2,
data.lag3,
data.lag4
)
n <- dim(data)[2]
n
n <- dim(data)[1]
data.lag1 <- data[2:n]
data.lag1 <- data[2:n,]
data.lag1 <- data[2:n,]
data.lag2 <- data[3:n,]
data.lag3 <- data[4:n,]
data.lag4 <- data[5:n,]
data.lag5 <- data[6:n,]
data.lag1 <- data[1:n-1]
data.lag1 <- data[1:n-1,]
data.lag5 <- data[1:n-5,]
data.lag1 <- data[1:n-1,]
data.lag2 <- data[1:n-2,]
data.lag3 <- data[1:n-3,]
data.lag4 <- data[1:n-4,]
data.lag5 <- data[1:n-5,]
data.lag1 <- data[1:(n-1),]
data.lag2 <- data[1:(n-2),]
data.lag3 <- data[1:(n-3),]
data.lag4 <- data[1:(n-4),]
data.lag5 <- data[1:(n-5),]
data.lag1 <- data[1:(n-1),]
data.lag2 <- data[1:(n-2),]
data.lag3 <- data[1:(n-3),]
data.lag4 <- data[1:(n-4),]
data.lag5 <- data[1:(n-5),]
data.lag1 <- rbind(data[1:(n-1),],
rep(NA,50))
data.lag1
data.lag1 <- rbind(rep(NA,50),
data[1:(n-1),])
head(data.lag1)
data.lag1 <- rbind(rep(NA,50),
data[1:(n-1),])
data.lag2 <- rbind(rep(NA,50),
rep(NA,50),
data[1:(n-2)])
data.lag3 <- rbind(rep(NA,50),
rep(NA,50),
rep(NA,50),
data[1:(n-3),]
data.lag4 <- rbind(rep(NA,50),
rep(NA,50),
rep(NA,50),
rep(NA,50),
data[1:(n-4),]
data.lag5 <- rbind(rep(NA,50),
rep(NA,50),
rep(NA,50),
rep(NA,50),
rep(NA,50),
data[1:(n-5),]
data.lag1 <- rbind(rep(NA,50),
data[1:(n-1),])
data.lag1 <- rbind(rep(NA,50),
data[1:(n-1),])
data.lag2 <- rbind(rep(NA,50),
rep(NA,50),
data[1:(n-2)])
data.lag2 <- rbind(rep(NA,50),
rep(NA,50),
data[1:(n-2),])
data.lag3 <- rbind(rep(NA,50),
rep(NA,50),
rep(NA,50),
data[1:(n-3),])
data.lag4 <- rbind(rep(NA,50),
rep(NA,50),
rep(NA,50),
rep(NA,50),
data[1:(n-4),])
data.lag5 <- rbind(rep(NA,50),
rep(NA,50),
rep(NA,50),
rep(NA,50),
rep(NA,50),
data[1:(n-5),])
features <- cbind(
target,
data.lag1,
data.lag2,
data.lag3,
data.lag4,
data.lag5
)
features <- features[6:n,]
